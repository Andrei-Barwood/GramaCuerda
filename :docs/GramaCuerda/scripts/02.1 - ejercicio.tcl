proc mezclar_lista {lista} {
    set mezclada {}
    set original [concat $lista] ;# hacemos copia

    while {[llength $original] > 0} {
        set idx [expr {int(rand() * [llength $original])}]
        lappend mezclada [lindex $original $idx]
        set original [lreplace $original $idx $idx]
    }
    return $mezclada
}


# Script interactivo de pr√°ctica de Ley de Ohm
proc generar_ejercicio {indice} {
    set ecuaciones {
        {"I = Q / t" "corriente (I)"}
        {"Q = I * t" "carga el√©ctrica (Q)"}
        {"t = Q / I" "tiempo (t)"}
    }

    # Diccionario de pistas (hints) para cada ecuaci√≥n
    set pistas {
    {
        "La corriente es la cantidad de carga que pasa por un punto en cierto tiempo. Ideal para saber cu√°nta energ√≠a circula en un sistema e√≥lico."
        "Piensa en la corriente como un flujo constante de electrones. ¬øCu√°nto fluye en un tiempo dado?"
        "Se usa para medir cu√°n intensamente fluye la electricidad. Muy √∫til en instalaciones solares o turbinas."
    }
    {
        "La carga es el resultado de mantener una corriente durante cierto tiempo. As√≠ calculas cu√°nta energ√≠a ha sido transferida."
        "Imagina cu√°nta carga ha pasado si conoces la corriente y el tiempo. Ideal en almacenamiento de energ√≠a."
        "Esto sirve para estimar cu√°ntos coulombs han sido movidos en un proceso energ√©tico completo."
    }
    {
        "El tiempo se deduce dividiendo la carga por la corriente. As√≠ sabes cu√°nto dur√≥ una transferencia de energ√≠a."
        "Si sabes cu√°nta carga y cu√°nta corriente, puedes estimar cu√°nto tard√≥ en pasar toda esa energ√≠a."
        "√ötil para determinar la duraci√≥n de una carga solar o descarga e√≥lica seg√∫n cu√°nta electricidad fluye."
    }
}


    # Diccionario de pistas con m√∫ltiples opciones por f√≥rmula





    # Selecci√≥n aleatoria de una ecuaci√≥n
    set eqIndex [expr {int(rand()*3)}]
    set formula [lindex $ecuaciones $eqIndex 0]
    set variable [lindex $ecuaciones $eqIndex 1]

    # Generar n√∫meros aleatorios entre rangos realistas
    set I [expr {round(10 + rand()*90)}]        ;# corriente: 10-100 A
    set t [expr {round(1 + rand()*10)}]         ;# tiempo: 1-10 s
    set Q [expr {$I * $t}]

    switch $eqIndex {
        0 {
            set correcto [format "%.2f" [expr {$Q / double($t)}]]
            set pregunta "Una turbina e√≥lica transfiere una carga el√©ctrica de $Q C en $t segundos. ¬øCu√°l es la ${variable}?"
        }
        1 {
            set correcto [format "%.2f" [expr {$I * $t}]]
            set pregunta "Un sistema solar entrega una corriente de $I A durante $t segundos. ¬øCu√°l es la ${variable}?"
        }
        2 {
            set correcto [format "%.2f" [expr {$Q / double($I)}]]
            set pregunta "En una planta fotovoltaica se transfiere una carga de $Q C con una corriente de $I A. ¬øCu√°l es la ${variable}?"
        }
    }

    # Crear tres opciones: una correcta y dos distractores
    set opciones [list $correcto]

    # Agregar dos opciones err√≥neas
    while {[llength $opciones] < 3} {
        set distractor [format "%.2f" [expr {$correcto + (rand()*10 - 5)}]]
        if {[lsearch -exact $opciones $distractor] == -1} {
            lappend opciones $distractor
        }
    }

    # Mezclar opciones
    # set opciones [lsort -command {expr {rand() > 0.5 ? 1 : -1}} $opciones]
    set opciones [mezclar_lista $opciones]

    puts "\nEjercicio $indice/7"
    
    set pista [lindex $pistas $eqIndex]
    
    # Obtener lista de hints para esta ecuaci√≥n
    set hint_list [lindex $pistas $eqIndex]

    # Elegir un hint aleatorio
    set hint [lindex $hint_list [expr {int(rand() * [llength $hint_list])}]]

    # Imprimir f√≥rmula y pista
    puts "\nüìò F√≥rmula: $formula"
    puts "üí° $hint\n"


    puts "$pregunta"
    for {set i 0} {$i < 3} {incr i} {
        puts "[expr {$i+1}]. [lindex $opciones $i]"
    }

    puts -nonewline "Tu respuesta (1-3): "
    flush stdout
    gets stdin respuesta

    if {[string trim $respuesta] == "" || ![string is integer -strict $respuesta] || $respuesta < 1 || $respuesta > 3} {
        puts "Entrada inv√°lida. Se contar√° como incorrecta."
        return 0
    }

    set elegida [lindex $opciones [expr {$respuesta - 1}]]
    if {$elegida == $correcto} {
        puts "‚úÖ Correcto. ¬°Buen trabajo!"
        return 1
    } else {
        puts "‚ùå Incorrecto. La respuesta correcta era $correcto."
        return 0
    }
}

# Bucle principal para 7 ejercicios
set puntaje 0
for {set i 1} {$i <= 7} {incr i} {
    set puntaje [expr {$puntaje + [generar_ejercicio $i]}]
}

puts "\nResultados finales: Obtuviste $puntaje de 7 respuestas correctas."
puts "Gracias."
