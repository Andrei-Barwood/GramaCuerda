#!/usr/bin/env tclsh

# Funci√≥n para verificar si un valor es un n√∫mero entero positivo
proc es_entero_positivo {valor} {
    return [regexp {^[1-9][0-9]*$} $valor]
}

# Funci√≥n para describir el tipo de fracci√≥n en base al exponente
proc explicar_exponente {exponente} {
    if {$exponente == 1} {
        return "d√©cima (0.1)"
    } elseif {$exponente == 2} {
        return "cent√©sima (0.01)"
    } elseif {$exponente == 3} {
        return "mil√©sima (0.001)"
    } elseif {$exponente == 4} {
        return "diezmil√©sima (0.0001)"
    } elseif {$exponente == 5} {
        return "cent√©sima de diezmil√©sima (0.00001)"
    } elseif {$exponente == 6} {
        return "millonesima (0.000001)"
    } elseif {$exponente == -1} {
        return "d√©cima (10)"
    } elseif {$exponente == -2} {
        return "cent√©sima (100)"
    } elseif {$exponente == -3} {
        return "mil√©sima (1000)"
    } elseif {$exponente == -4} {
        return "diezmil√©sima (10000)"
    } elseif {$exponente == -5} {
        return "cent√©sima de diezmil√©sima (100000)"
    } elseif {$exponente == -6} {
        return "millonesima (1000000)"
    } else {
        return "No hay una descripci√≥n est√°ndar para este exponente."
    }
}

# Pedir al usuario que ingrese un exponente
puts "üî¢ Ingresa el exponente de la potencia de 10 (o presiona Enter para elegir uno aleatorio):"
gets stdin exponente

# Si el usuario no ingresa nada, generar un exponente aleatorio (1 a 6)
if {$exponente eq "" || ![es_entero_positivo $exponente]} {
    set exponente [expr {int(rand() * 6) + 1}]
    puts "‚ö° Se ha generado un exponente aleatorio: $exponente"
}

# Construcci√≥n de la ecuaci√≥n en dos formas
set fraccion "1/10^$exponente"
set exponente_negativo "10^-$exponente"

# Obtener la descripci√≥n de la fracci√≥n
set descripcion [explicar_exponente $exponente]

# Mostrar resultados al usuario
puts "\nüåü Ecuaci√≥n generada:"
puts "   $fraccion = $exponente_negativo"
puts "\nüìå Regla: Cuando movemos una potencia del denominador al numerador, cambiamos el signo del exponente."

# Explicar el tipo de fracci√≥n
puts "\nüîç Explicaci√≥n:"
puts "   La fracci√≥n $fraccion representa una fracci√≥n de tipo: $descripcion"
